class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        int n = obstacles.size();
        vector<int> dp;
        dp.push_back(obstacles[0]);
        vector<int> ans(n);
        ans[0] = 1;
        
        for (int i = 1; i != n; ++i) {
            int x = obstacles[i];
            int index = 0;
            if (x >= dp.back()) {
                dp.push_back(x);
                index = dp.size();
            }
            else {
                int l = 0, r = dp.size();
                index = r - 1;
                while (l < r) {
                    int m = l + ((r - l) >> 1);
                    if (dp[m] > x) {
                        index = m;
                        r = m;
                    }
                    else {
                        l = m + 1;
                    }
                }
                dp[index] = x;
                ++index;
            }
            ans[i] = index;
        }
        return ans;
    }
};