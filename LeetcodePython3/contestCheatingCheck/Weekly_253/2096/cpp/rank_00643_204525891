class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        int n = obstacles.size();
        vector<int> res(n, 1);
        vector<int> min_val(1, obstacles[0]);
        for (int i = 1; i < n; ++i) {
            int l = 0, r = min_val.size();
            while (l < r) {
                int mid = (r - l) / 2 + l;
                if (min_val[mid] <= obstacles[i]) {
                    l = mid + 1;
                } else {
                    r = mid;
                }
            }
            res[i] += l;
            if (res[i] > min_val.size()) {
                min_val.push_back(obstacles[i]);
            } else {
                min_val[res[i]-1] = min(min_val[res[i]-1], obstacles[i]);
            }
        }
        return res;
    }
};