class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obs) {
        int len = obs.size();
        if (len == 0) return {};
        if (len == 1) return {obs[0]};
        
        vector<int> dp;
        vector<int> ans(len, 0);
        for (int i = 0; i < len; ++i) {
            auto it = upper_bound(dp.begin(), dp.end(), obs[i]);
            if (it == dp.end()) {
                dp.emplace_back(obs[i]);
                it = --dp.end();
            }
            else *it = obs[i];
            ans[i] = (it - dp.begin() + 1);
        }
        
        // for (auto c : dp) cout << c << ' ';
        // cout << endl;
        
        return ans;
    }
};