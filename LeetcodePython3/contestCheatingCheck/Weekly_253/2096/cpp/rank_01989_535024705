class Solution {
public:

 
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& a) {
        int n = a.size();
    const int INF = 1e9;
    vector<int> d(n+1, INF);
    d[0] = -INF;
        vector<int> aa(n,1);
    for (int i = 0; i < n; i++) {
        int j = upper_bound(d.begin(), d.end(), a[i]) - d.begin();
        if (d[j-1] <= a[i] && a[i] < d[j])
        {
            d[j] = a[i];
            //ans[j]=d[j]
            if(i>0)
            aa[i]=j;
        }
        else
            aa[i]=aa[i-1];
    }

    int ans = 0;
    for (int i = 0; i <= n; i++) {
        if (d[i] < INF)
            ans = i;
    }
    return aa;
    }
};