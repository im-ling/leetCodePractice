class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        // so here we have to find the next smaller of equal to it in right;
        int n = obstacles.size();
         vector<int>res(n,1);
       
          const int INF = 1e9;
         vector<int> d(n+1, INF);
           d[0] = -INF;
        
         for (int i = 0; i < n; i++) {
              int j = upper_bound(d.begin(), d.end(), obstacles[i]) - d.begin();
               res[i]=j;
               
              d[j] = obstacles[i];
          }
        
        
        
        return res;
          
         
    }
};