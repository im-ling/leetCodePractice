class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& o) {
        vector< pair<int,int> > v;
        int n = o.size();
        for(int i = 0; i < n; ++i) {
            v.push_back({o[i], i});
        }
        sort(v.begin(), v.end());
        for(int i = 0; i < n; ++i) {
            o[v[i].second] = i;
        }
        
        vector<int> tmp, res(n);
        res[0] = 1;
        int pos;
        tmp.push_back(o[0]);
        for(int i = 1; i < n; ++i) {
            if( tmp.back() < o[i]) {
                tmp.push_back(o[i]);
                res[i] = tmp.size();
            }
            else {
                pos = lower_bound( tmp.begin(), tmp.end(), o[i]) - tmp.begin();
                tmp[pos] = o[i];
                res[i] = pos + 1;
            }
        }
        return res;
    }
};