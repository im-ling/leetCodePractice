class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        int n = obstacles.size();
        vector<int> vec;
        vector<int> dp(n);
        for (int i = 0; i < n; ++i) {
            int num = obstacles[i];
            auto it = upper_bound(vec.begin(), vec.end(), num);
            dp[i] = (it - vec.begin()) + 1;
            if (it == vec.end())
                vec.push_back(num);
            else
                *it = num;
        }
        return dp;
    }
};