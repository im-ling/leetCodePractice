class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        int n = obstacles.size();
        vector<int> sub, ans(n);
        for(int i=0; i < n; ++i) {
            auto it = upper_bound(sub.begin(), sub.end(), obstacles[i]);
            
            if(it == sub.end()) {
                sub.push_back(obstacles[i]);
                ans[i] = sub.size();
            }
            else {
                /*if(*it != obstacles[i]) {
                    *it = obstacles[i];
                    ans[i] = it - sub.begin() + 1;
                }
                else {
                    ans[i] = it - sub.begin() + 2;
                    sub.insert(it+1, obstacles[i]);
                }*/
                *it = obstacles[i];
                ans[i] = it - sub.begin() + 1;
            }
        }
        return ans;
    }
};