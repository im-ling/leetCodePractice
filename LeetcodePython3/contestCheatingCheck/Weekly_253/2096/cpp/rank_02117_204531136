class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        vector<int> dp;
        vector<int> res;
        
        int n = obstacles.size();
        
        dp.push_back(obstacles[0]);
        res.push_back(1);
        
        for (int i = 1; i < n; ++i)
        {
            int num = obstacles[i];
            if (num >= dp.back())
            {
                dp.push_back(num);
                res.push_back(dp.size());
            }
            else 
            {
                int left = 0, right = dp.size();
                while (left < right)
                {
                    int mid = left + (right - left) / 2;
                    if (dp[mid] <= num)
                    {
                        left = mid + 1;
                    }
                    else if (dp[mid] > num)
                        right = mid;
                }
                dp[left] = num;
                res.push_back(left+1);
            }
        }
        
        return res;
    }
};