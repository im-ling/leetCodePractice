class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        int n = obstacles.size();
        
        vector<int> dp;
        dp.emplace_back(obstacles[0]);
        vector<int> ans;
        ans.emplace_back(1);
        for (int i = 1; i < n; i++) {
            auto it = upper_bound(dp.begin(), dp.end(), obstacles[i]);
            int tmp = it - dp.begin() + 1;
            if (it == dp.end()) {
                dp.emplace_back(obstacles[i]);
            } else {
                *it = obstacles[i];
            }
            ans.emplace_back(tmp);
        }
        return ans;
    }
};