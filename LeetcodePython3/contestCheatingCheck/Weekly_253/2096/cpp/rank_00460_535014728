class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        int n = (int)obstacles.size();
        vector<int> dp(n, 0);
        set<pair<int, int>> mx;
        mx.insert({-1, 0});
        for (int i = 0; i < n; i++) {
            auto it = prev(mx.upper_bound({obstacles[i]+1, 0}));
            dp[i] = it->second + 1;
            while (true) {
                it = mx.upper_bound({obstacles[i], 0});
                if (it != mx.end() && dp[i] >= it->second) mx.erase(it);
                else break;
            }
            mx.insert({obstacles[i], dp[i]});
        }
        return dp;
    }
};