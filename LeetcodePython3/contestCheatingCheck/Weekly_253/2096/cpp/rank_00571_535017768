class Solution {
public:
    
    int lengthOfLIS(vector<int>& nums, vector<int> &memo) {
        vector<int> res;
        int n = nums.size();
        memo.resize(n);
        
        for(int i=0; i< n; i++) {
            auto it = upper_bound(res.begin(), res.end(), nums[i]);
            if(it == res.end()) {
                res.push_back(nums[i]);
                memo[i] = res.size();
            }
            else {
                memo[i] = distance(res.begin(), it) + 1;
                *it = nums[i];
            }
           
        }
        return res.size();
    }
    
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& nums) {
        int n = nums.size();
        vector<int> ans(n, 0);
        ans[0] = 1;
        
        lengthOfLIS(nums, ans);
        
        return ans;
    }
};