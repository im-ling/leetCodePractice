class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) 
    {
        vector<int> mp(obstacles.size()+1);
        mp[0]=INT_MIN;
        mp[1]=obstacles[0];
        vector<int> ans(obstacles.size());
        ans[0]=1;
        int cur=1;
        for(int i=1;i<obstacles.size();i++)
        {
            if(obstacles[i]>=mp[cur])
            {
                cur++;
                ans[i]=cur;
                mp[cur]=obstacles[i];
            }
            else
            {
                int l = 1, r = cur, pos = 0; 
                while (l <= r) {
                    int mid = (l + r) >> 1;
                    if (mp[mid] <= obstacles[i]) {
                        pos = mid;
                        l = mid + 1;
                    } else {
                        r = mid - 1;
                    }
                }
                mp[pos + 1] = obstacles[i];
                ans[i]=pos+1;
                /*int j=cur;
                while(mp[j]>obstacles[i])j--;
                mp[j+1]=obstacles[i];
                ans[i]=j+1;*/
            }
            
        }
        return ans;
    }
};