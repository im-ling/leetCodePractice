class Solution {
public:
    int findIndex(vector<int>& v, int l, int r, int key)
    {
        int ans=0;
        while(l<=r){
            int m=(l+r)/2;
            if(v[m]<=key){
                l=m+1;
                ans=max(ans,m+1);
            }
            else r=m-1;
        }

        return ans;
    }

    vector<int> longestObstacleCourseAtEachPosition(vector<int>& arr) {
        vector<int>ans(arr.size());
        ans[0]=1;
        int l=1;
        vector<int>tmp(arr.size(),1e9);
        tmp[0]=arr[0];
        for(int i=1;i<arr.size();i++){
            if(arr[i]<tmp[0]){
                tmp[0]=arr[i];
                ans[i]=1;
            }
            else if(arr[i]>tmp[l-1]){
                tmp[l++]=arr[i];
                ans[i]=l;
            }
            else {
                int tl=upper_bound(tmp.begin(),tmp.end(),arr[i])-tmp.begin();
                //cout<<i<<" "<<tl<<endl;
                tmp[tl]=arr[i];
                ans[i]=tl+1;
                l=max(l,tl+1);
            }
            //for(int i=0;i<l;i++)cout<<tmp[i]<<" ";cout<<endl;
            //cout<<ans[i]<<endl;
        }
        return ans;
    }
};