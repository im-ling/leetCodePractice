class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        int n = obstacles.size();
        vector<int> dp(n + 1);
        int now = 0;
        vector<int> ans(n);
        for (int i = 0; i < n; i ++) {
            int l = 0;
            int r = now;
            while (l < r) {
                int mid = (l + r) / 2 + 1;
                if (dp[mid] <= obstacles[i]) l = mid;
                else r = mid - 1;
            }
            int len = l + 1;
            now = max(now, len);
            if (dp[len] == 0) dp[len] = obstacles[i];
            else dp[len] = min(dp[len], obstacles[i]);
            ans[i] = len;
        }
        return ans;
    }
};