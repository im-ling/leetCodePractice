class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        int n = obstacles.size();
        vector<int> dp, res(n);
        for (int i = 0; i < n; ++i) {
            auto it = upper_bound(dp.begin(), dp.end(), obstacles[i]);
            if (it == dp.end()) {
                res[i] = dp.size() + 1;
                dp.push_back(obstacles[i]);
            }
            else {
                res[i] = it - dp.begin() + 1;
                *it = obstacles[i];
            }
        }
        return res;
    }
};