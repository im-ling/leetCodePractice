const int N = 1e5 + 10;
int a[N];
int f[N];
int q[N], cnt;

class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& b) {
        int n = b.size();
        cnt = 0;
        memset(f, 0, sizeof f);
        memset(q, 0, sizeof q);
        
        for (int i = 1; i <= n; ++ i) a[i] = b[i - 1];
        
        for (int i = 1; i <= n; ++ i)
        {
            int l = 0, r = cnt;
            while (l < r)
            {
                int mid = l + r + 1 >> 1;
                if (q[mid] <= a[i]) l = mid;
                else r = mid - 1;
            }
            cnt = max(cnt, r + 1);
            q[r + 1] = a[i];
            f[i] = r + 1;
        }
        for (int i = 0; i < n; ++ i) b[i] = f[i + 1];
        return b;
    }
};