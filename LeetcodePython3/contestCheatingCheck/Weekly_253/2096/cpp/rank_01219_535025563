class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        int n = obstacles.size();
        vector<int> res (n, 1);
        vector<int> h;
        h.push_back(0);
        for (int i = 0; i < n; ++i) {
            if (obstacles[i] >= h.back()) {
                h.push_back(obstacles[i]);
                res[i] = h.size() - 1;
            } else {
                auto it = upper_bound(h.begin(), h.end(), obstacles[i]);
                //cout << *it << endl;
                *it = obstacles[i];
                res[i] = it - h.begin();
            }
        }
        return res;
    }
};