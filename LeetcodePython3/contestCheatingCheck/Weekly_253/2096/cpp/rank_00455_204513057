class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {

        int len = 1;
		int n = obstacles.size();
		vector<int> res(n, 0);
		
        vector<int> info(n + 1, 0);
        info[len] = obstacles[0];
		res[0] = 1;
        for (int i = 1; i < n; ++i) {
            if (obstacles[i] >= info[len]) { // 这个地方非严格递增！！！
                info[++len] = obstacles[i];
				res[i] = len;				
            } else {
                int l = 1;
				int r = len;
				int pos = 0;
                // 找到最后一个小于等于 obstacles[i]的位置
                while (l <= r) {
                    int mid = l + (r-l)/2;
                    if (info[mid] <= obstacles[i]) {
                        pos = mid;
                        l = mid + 1;
                    } else {
                        r = mid - 1;
                    }
                }
                info[pos + 1] = obstacles[i];
				res[i] = pos+1;
            }
        }
        
		return res;
    }
};