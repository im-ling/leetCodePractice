class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& o) {
        int n=o.size();
        vector<int>ans(n);
        vector<int>dp(n,INT_MAX);
        dp[0]=o[0];
        ans[0]=1;
//         for(int i=0;i<n;i++){
//             ans[i]=1;
//             // for(int j=0;j<i;j++){
//             //     if(o[i]>=o[j]&&(ans[j]+1>ans[i])){
//             //         ans[i]=ans[j]+1;
//             //     }
//             // }
            
//         }
        
        int pos=0;
        for(int i=1;i<n;i++){
            if(o[i]>=dp[pos]){
                dp[++pos]=o[i];
                ans[i]=pos+1;
            }else{
                int tmp=upper_bound(dp.begin(),dp.begin()+pos+1,o[i])-dp.begin();
                dp[tmp]=o[i];
                ans[i]=tmp+1;
            }
        }
        return ans;
    }
};