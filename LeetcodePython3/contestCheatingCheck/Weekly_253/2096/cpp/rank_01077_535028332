const int MAX=(int)1e7+2;

int BIT[MAX];

void update(int id,int val){
    while(id<MAX){
        BIT[id]=max(BIT[id],val);
        id+=id&(-id);
    }
}

int get(int id){
    if(id==0)
        return 0;
    int ans=0;
    while(id>0){
        ans=max(ans,BIT[id]);
        id-=id&(-id);
    }
    return ans;
}
class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        vector<int>ans;
        int n=obstacles.size();
        memset(BIT,0,sizeof(BIT));
        for(int i=0;i<n;i++){
           int res=1;
            res+=get(obstacles[i]);
            ans.push_back(res);
            update(obstacles[i],res);
        }
        return ans;
        
    }
};