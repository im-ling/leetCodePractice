class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& nums) {
        int n=nums.size();
        // if(n==0)return {0};
        vector<int>d(n+1);
        vector<int>ans(n);
        int len=1;
        d[len]=nums[0];
        ans[0]=1;
        for(int i=1;i<n;++i){
            if(nums[i]>=d[len]){
                d[++len]=nums[i];
                ans[i]=len;
            }else{
                int l=1,r=len,pos=0;
                while(l<=r){
                    int mid=l+(r-l)/2;
                    if(d[mid]<=nums[i]){
                        pos=mid;
                        l=mid+1;
                    }else{
                        r=mid-1;
                    }
                }
                // cout<<i<<" "<<nums[i]<<" "<<pos<<endl;
                d[pos+1]=nums[i];
                ans[i]=pos+1;
            }
        }
        return ans;
    }
};
