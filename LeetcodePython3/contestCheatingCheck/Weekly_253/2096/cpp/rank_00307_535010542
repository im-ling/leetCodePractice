class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
		vector<int> Temp;
		vector<int> Result(1, 1);
		int i;
		int N = obstacles.size();
		
		Temp.push_back(obstacles[0]);
		
		for(i = 1; i < N; i++)
		{
			if(Temp.back() <= obstacles[i])
			{
				Temp.push_back(obstacles[i]);
			}
			else
			{
				*upper_bound(Temp.begin(), Temp.end(), obstacles[i]) = obstacles[i];
			}
			
			int T = (upper_bound(Temp.begin(), Temp.end(), obstacles[i]) - Temp.begin());
			Result.push_back(T);
		}
		
		return Result;
    }
};