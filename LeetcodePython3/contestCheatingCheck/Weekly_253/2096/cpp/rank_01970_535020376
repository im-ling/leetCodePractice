class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        vector<int> v;
        vector<int> ans;
        for(int i=0;i<obstacles.size();i++){
            if(v.size()==0) {
                v.push_back(obstacles[i]);
                ans.push_back(v.size());
            }
            else{
                int k=0;
                if(obstacles[i]>=v.back()) {
                    v.push_back(obstacles[i]);
                    ans.push_back(v.size());
                }
                else{
                    solve(v,obstacles[i],k);
                    ans.push_back(k+1);
                }
            }
        }
        return ans;
    }
    void solve(vector<int>& v,int x,int& k){
        int s=0,e=v.size()-1;
        while(s<=e){
            int m=s+(e-s)/2;
            if(v[m]<=x) s=m+1;
            else if(v[m]>x){
                k=m;
                e=m-1;
            }
        }
        v[k]=x;
    }
};