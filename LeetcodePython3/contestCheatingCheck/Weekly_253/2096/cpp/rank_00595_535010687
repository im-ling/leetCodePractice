class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        vector<int> v;
        vector<int> ret;
        vector<pair<int,int>> vec;
        for (int i = 0; i < obstacles.size(); ++i) {
            vec.emplace_back(obstacles[i], i);
        }
        vector<int> ans(obstacles.size());
        sort(vec.begin(), vec.end());
        for (auto [x, y] : vec) {
            auto it = lower_bound(v.begin(), v.end(), y);
            ans[y] = ((int)(it - v.begin()) + 1);
            if (it == v.end()) v.push_back(y);
            else *it = y;
        }
        return ans;
    }
};