class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        int n = obstacles.size();
        vector<int> result(n, 0);
        int len = 1;
        vector<int> d(n + 1, 0);
        d[len] = obstacles[0];
        result[0] = 1;
        for(int i = 1; i < n; ++ i){
            if(obstacles[i] >= d[len]){
                len ++;
                d[len] = obstacles[i];
                result[i] = len;
            }
            else{
                int l = 1, r = len, pos = 0;
                while(l <= r){
                    int mid = (l + r) / 2;
                    if(d[mid] <= obstacles[i]){
                        pos = mid;
                        l = mid + 1;
                    }
                    else r = mid - 1;
                }
                d[pos + 1] = obstacles[i];
                result[i] = pos + 1;
            }
        }
        return result;

    }
};