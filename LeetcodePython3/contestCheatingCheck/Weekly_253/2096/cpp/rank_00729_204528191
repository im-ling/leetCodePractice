class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        int n = obstacles.size();
        int len = 1;
        vector<int> tail(n + 1, 0); //len = i, min tail number
        vector<int> ans(n, 0);
        tail[len] = obstacles[0];
        ans[0] = 1;
        for(int i = 1; i < n; i++){
            if(obstacles[i] >= tail[len]){
                len++;
                tail[len] = obstacles[i];
                ans[i] = len;
            }
            else {
                int l = 1, r = len, pos = 0;
                while(l <= r){
                    int mid = (l + r) / 2;
                    if(tail[mid] <= obstacles[i]){
                        pos = mid;
                        l = mid + 1;
                    }
                    else{
                        r = mid - 1;
                    }
                }
                tail[pos + 1] = obstacles[i];
                ans[i] = pos + 1;
            }
        }
        
        return ans;
    }
};