class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        vector<int> m;
        
        vector<int> results;
        for (int i = 0; i < obstacles.size(); ++i)
        {
            if (!m.size())
            {
                m.push_back(obstacles[i]);
                results.push_back(m.size());
            }
            else
            {
                if (m.size() && m[m.size() - 1] > obstacles[i])
                {
                    auto it = upper_bound (m.begin(), m.end(), obstacles[i]);
                    *it = obstacles[i];
                    results.push_back(it - m.begin() + 1);
                }
                else
                {
                    m.push_back(obstacles[i]);
                    results.push_back(m.size());
                }
            }
            
        }
        
        return results;
    }
};
// [5,1,5,5,1,3,4,5,1,4]
// [1,1,2,3,2,3,4,5,3,5]
