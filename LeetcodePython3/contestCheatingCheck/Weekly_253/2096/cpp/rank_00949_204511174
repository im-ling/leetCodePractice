class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
		int n = obstacles.size();
		vector<int> res;
		
		vector<int> dp;
		dp.push_back(obstacles[0]);
		res.push_back(1);
		for (int i = 1; i < n; i ++ )
		{
			if (obstacles[i] >= dp.back()) 
			{
				dp.push_back(obstacles[i]);
				res.push_back(dp.size());
			}
			else
			{
				int j = upper_bound(dp.begin(), dp.end(), obstacles[i]) - dp.begin();
				dp[j] = obstacles[i];
				res.push_back(j + 1);
			}	
		}
		
		return res;
    }
};