class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        int n = obstacles.size();
        vector<int> ret(n, 0);
        vector<int> dp(n+1, 1e8);
        ret[0] = 1;
        dp[0] = 0;
        dp[1] = obstacles[0];
        int cnt = 1;
        for (int i=1;i<n;i++) {
            if (obstacles[i] >= dp[cnt]) {
                cnt++;
                dp[cnt] = obstacles[i];
                ret[i] = cnt;
            } else {
                
            
                int id = upper_bound(dp.begin(), dp.end(), obstacles[i]) - dp.begin();
                id--;
                ret[i] = id+1;
                //update dp;
                dp[id+1] = obstacles[i];
            }
            
        }
        return ret;
    }
};