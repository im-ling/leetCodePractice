class Solution {
public:
    vector<int> f;
    vector<int> res;
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        int n = obstacles.size();
        for (int i = 0;i < n;i++) {
            if (!f.size() || f[f.size() - 1] <= obstacles[i]) f.push_back(obstacles[i]);
            else {
                auto pos = upper_bound(f.begin(), f.end(), obstacles[i]);
                if (pos == f.end()) f.push_back(obstacles[i]);
                else *pos = obstacles[i];
            }
            
            auto pos = upper_bound(f.begin(), f.end(), obstacles[i]);
            int len = pos - f.begin();
            res.push_back(len);
        }
        return res;
    }
    
};