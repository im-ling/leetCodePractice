class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        vector<int> q;
        vector<int> res;
        for (auto x : obstacles) {
            if (q.empty() || x >= q.back()) q.push_back(x), res.push_back(q.size());
            else {

                if (x <= q[0]) {
                    
                    if (x < q[0]) {
                        q[0] = x;
                        res.push_back(1);
                    } else {
                        int k = 1;
                        while (k < q.size() && q[k] == q[0]) k++;
                        q[k] = x;
                        res.push_back(k+1);
                    }
                    
                }
                else {
                    int l = 0, r = q.size() - 1;
                    while (l < r) {
                        int mid = l + r + 1>> 1;
                        if (q[mid] <= x) {
                            l = mid;
                        } else {
                            r = mid - 1;
                        }
                    }

                    q[l+1] = x;
                    res.push_back(l+1+1);
                }

            }
        }

        return res;

    }
};