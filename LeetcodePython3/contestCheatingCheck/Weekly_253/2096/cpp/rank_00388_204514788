#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
  
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& a) {
        int n = a.size();
        vector<int> ans(n);
        using P = pair<int,int>;
        map<P, int> m;
        m[{0, -1}] = 0;
        int i, j, k;
        for (i = 0; i < n; i++) {
            auto it = m.upper_bound({a[i], i});
            auto& [q, w] = *prev(it);
            ans[i] = w + 1;
            if (it != m.end() && it->second == ans[i]) {
                m.erase(it);
            }
            m.insert({{a[i], i}, ans[i]});
        }
        return ans;
    }
};