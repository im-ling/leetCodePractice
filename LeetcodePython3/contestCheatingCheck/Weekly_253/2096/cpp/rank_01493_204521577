class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        int n = obstacles.size();
        vector<int> dp(n, 1);
        map<int, int> reco;
        reco[dp[0]] = obstacles[0];
        for (int i = 1; i < obstacles.size(); ++i){
            int tmp = obstacles[i];
            for (auto it = reco.rbegin(); it != reco.rend(); ++it){
                if(it->second<=tmp){
                    dp[i] = it->first + 1;
                    break;
                }
            }
            if(reco.count(dp[i]))
                reco[dp[i]] = min(reco[dp[i]], tmp);
            else
                reco[dp[i]] = tmp;
        }
        return dp;
    }
};