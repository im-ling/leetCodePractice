class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& nums) {
        ios_base::sync_with_stdio(false); cin.tie(0);
        int n = nums.size();
        vector<int> res(n, 0);
        vector<int> vec(n, 0);
        int idx = 0;
        for(int i = 0; i < n; ++i){
            int val = nums[i];
            if(idx == 0){
                vec[idx] = val;
                res[i] = 1;
                idx++;
                continue;
            }
            int l = 0;
            int r = idx - 1;
            while(l < r){
                int m = (l + r + 1)/2;
                if(vec[m] > val){
                    r = m - 1;
                }else{
                    l = m;
                }
            }
            if(l == idx - 1 && vec[l] <= val){
                vec[idx] = val;
                idx++;
                res[i] = idx;
            }else if(vec[l] <= val){
                vec[l+1] = val;
                res[i] = l + 2;
            }else{
                vec[l] = val;
                res[i] = l + 1;
            }
            
        }
        return res;
    }
};