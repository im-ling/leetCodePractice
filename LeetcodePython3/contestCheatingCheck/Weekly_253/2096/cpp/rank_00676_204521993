class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        vector<int> ans;
        vector<int> que;
        for (int i = 0; i < obstacles.size(); i++) {
            if (que.empty() || obstacles[i] >= que.back()) {
                que.push_back(obstacles[i]);
                ans.push_back(que.size());
            } else {
                auto it = upper_bound(que.begin(), que.end(), obstacles[i]) - que.begin();
              // cout << it <<endl;
                que[it]= obstacles[i];
                ans.push_back(it + 1);
            }
        }
        return ans;
        
    }
};