#define REP(i, a, b) for(register int i = (a); i < (b); i++)
#define _for(i, a, b) for(register int i = (a); i <= (b); i++)

const int MAXN = 1e5 + 10;
int  a[MAXN],b[MAXN], n, m;
int  f[MAXN];

class Solution {
public:
    inline int lowbit(int x) { return x & (-x); } 

    void motify(int x, int p)
    {
        for(; x <= m; x += lowbit(x))
            f[x] = max(f[x], p);
    }

    int get_max(int x)
    {
        int res = 0;
        for(; x; x -= lowbit(x))
            res = max(res, f[x]);
        return res;
    }
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& ob) {
        memset(f,0,sizeof f);
        int n=ob.size();
        vector<int> dp(n+1);
        for(int i=1;i<=n;i++)b[i]=a[i]=ob[i-1];
        
        sort(b+1 , b + n+1 );
        m = unique(b + 1, b + n + 1) - b - 1;
        for(int i=1;i<=n;i++) a[i] = lower_bound(b + 1, b + m + 1, a[i]) - b;
        
        for(int i=1;i<=n;i++)
        {
            dp[i] = get_max(a[i]) + 1;
            // cout<<dp[i]<<"\n";
            motify(a[i], dp[i]); 
        }
        vector<int> ans;
        for(int i=1;i<=n;i++)ans.push_back(dp[i]);
        return ans;
    }
};


