const int N  = 100010;
int q[N];
class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& a) {
        vector<int> res;
        memset(q,0,sizeof q);
        int len = 0;
        q[0] = -2e9;
        int ans = 0;
        int n = a.size();
        for(int i = 0;i < n;i++){
            if(a[i] >= q[len]){
                q[++len] = a[i];
                res.push_back(len);
            }
            else{
                int l = 0,r = len;
                while(l < r){
                    int mid = (l + r + 1) >> 1;
                    if(q[mid] <= a[i]) l = mid;
                    else r = mid - 1;
                }
                //cout << a[i]<<" "<<l<<endl;
                res.push_back(l + 1);
                l = 0, r= len;
                while(l < r){
                    int mid = l + r >> 1;
                    if(q[mid] > a[i]) r = mid;
                    else l = mid + 1;
                }
                q[l] = a[i];
            }
            
        }
        return res;
    }
};