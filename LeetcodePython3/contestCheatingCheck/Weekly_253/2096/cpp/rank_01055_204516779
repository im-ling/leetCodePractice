class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
int n = obstacles.size();
    vector<int>ans(n);
    vector<int>vec;
    ans[0] = 1;
    vec.push_back(obstacles[0]);
    for (int i = 1; i < n; ++i) {
      if (obstacles[i] >= vec.back()) {
        vec.push_back(obstacles[i]);
        ans[i] = vec.size();
      }
      else {
        int pos = upper_bound(vec.begin(), vec.end(), obstacles[i]) - vec.begin();
        vec[pos] = obstacles[i];
        ans[i] = pos + 1;
      }
    }
    return ans;
    }
};