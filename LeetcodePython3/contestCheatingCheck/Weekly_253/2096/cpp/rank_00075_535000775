class Solution {
public:
    
    int bs(vector<int>&v,int a)
    {
        int l=0,r=v.size()-1;
        int ans=-1;
        while(l<=r)
        {
            int mid=(l+r)/2;
            
            if(v[mid]<=a){ans=mid;l=mid+1;}
            else{r=mid-1;}
        }
        return ans;
        
    }
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& arr) {
        
        vector<int>v;
        int n=arr.size();
        vector<int>ans(n);
        
        for(int i=0;i<n;i++)
        {
            if(arr.empty())
            {
                ans[i]=1;
                v.push_back(arr[i]);
                continue;
            }
            
            int x=bs(v,arr[i]);
            
            if(x==v.size()-1)
            {
                v.push_back(arr[i]);
            }
            else{v[x+1]=arr[i];}
            
            ans[i]=x+2;
            
        }
        return ans;
        
    }
};