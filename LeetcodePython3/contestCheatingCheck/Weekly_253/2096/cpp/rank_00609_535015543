class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        int n=obstacles.size();
        vector<int>dp(n,1);
        map<int,int>mp;
        mp[obstacles[0]] = 1;
        for(int i=1;i<n;i++){
            
            auto temp = mp.upper_bound(obstacles[i]);
            if(temp!=mp.begin()){
                temp--;
                dp[i] = temp->second + 1;
            }
                
            // for(int j=0;j<i;j++){
            //     if(obstacles[j] <= obstacles[i]){
            //         dp[i] = max(dp[i], dp[j]+1);
            //     }
            // }
            while((temp = mp.upper_bound(obstacles[i])) != mp.end()){
                // temp--;
                if(temp->second > dp[i])break;
                mp.erase(temp);
            }
            mp[obstacles[i]] = dp[i];
            
        }
        
        return dp;
    }
};