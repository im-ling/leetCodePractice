const int N = 1e5 + 10;
int dp[N];

class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        vector<int> ans(obstacles.size());
        int len = 0;
        for(int i = 0; i < obstacles.size(); ++i){
            int l = 0, r = len;
            while(l < r){
                int m = l + r + 1>> 1;
                if(dp[m] <= obstacles[i]) l = m;
                else r = m - 1;
            }
            if(dp[l] <= obstacles[i]){
                dp[l + 1] = obstacles[i];
                len = max(len, l + 1);
                ans[i] = l + 1;
            }
            else ans[i] = 1;
        }
        return ans;
    }
};
