class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        int n = obstacles.size();
        vector<int> piles;
        vector<int> ans(n, 0);
        for (int i = 0; i < n; ++i) {
            if (piles.empty() || piles.back() <= obstacles[i]) {
                piles.emplace_back(obstacles[i]);
                ans[i] = piles.size();
            } else {
                int l = 0, r = piles.size() - 1;
                while (l < r) {
                    int m = l + (r - l) / 2;
                    if (piles[m] <= obstacles[i]) {
                        l = m + 1;
                    } else {
                        r = m;
                    }
                }
                piles[l] = obstacles[i];
                ans[i] = l + 1;
            }
        }
        return ans;
    }
};