class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        // Find LIS but in O(nlogn)
        vector<int> s;
        int n = obstacles.size();
        vector<int> dp(n, 0);
        for(int i = 0; i < n; ++i) {
            auto it = upper_bound(s.begin(), s.end(), obstacles[i]);
            if(it == s.end()) {
                s.push_back(obstacles[i]);
                dp[i] = s.size();
            } else {
                dp[i] = it - s.begin() + 1;
                *it = obstacles[i];
            }                          
        }
        return dp;
    }
};