const int MAXN=1e7+5;
typedef long long ll;
class Solution {
    ll bit[MAXN];
public:
    ll sum(int x){
        ll res=0;
        for(int i=x;i>0;i-=(i&(-i)))res+=bit[i];
        return res;
    }
    void add(int x,int val){
        for(int i=x;i<MAXN;i+=(i&(-i)))bit[i]+=val;
    }
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& nums) {
        memset(bit,0,sizeof(bit));
        vector<int>ans;
        vector<int>temp;
        temp.push_back(nums[0]);
        ans.push_back(1);
        for(int i=1;i<nums.size();i++){
            if(nums[i]>=temp.back()){
                temp.push_back(nums[i]);
            }else {
                int index=upper_bound(temp.begin(),temp.end(),nums[i])-temp.begin();
                temp[index]=nums[i];
            }
            int k=upper_bound(temp.begin(),temp.end(),nums[i])-temp.begin();
            ans.push_back(k);
        }
        /*int cnt=0;
        for(int i=1;i<=nums.size();i++){
            cnt+=sum(MAXN-1)-sum(nums[i-1]);
            ans.push_back(i-cnt);
            add(nums[i-1],1);
        }*/
        return ans;
    }
};