class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        int n = obstacles.size();
        map<int, int, greater<int>> pre;
        pre[0] = 0;
        vector<int> res(n, 1);
        for (int i = 0; i < n; i++) {
            auto it = pre.lower_bound(obstacles[i]);
            res[i] = it->second + 1;
            // cout << i << " " << res[i] << endl;
            if (it != pre.begin()) {
                it = prev(it);
                if (it->second <= res[i]) pre.erase(it);
            }
            pre[obstacles[i]] = res[i];
        }
        return res;
    }
};