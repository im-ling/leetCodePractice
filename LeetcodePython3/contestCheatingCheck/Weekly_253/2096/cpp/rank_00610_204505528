class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        int n = obstacles.size();
        vector<int> ret(n, 1);
        vector<int> arr {obstacles[0]};
        for (int i = 1; i < n; ++i) {
            if (obstacles[i] >= arr.back()) {
                arr.push_back(obstacles[i]);
                ret[i] = arr.size();
            } else {
                auto it = upper_bound(arr.begin(), arr.end(), obstacles[i]);
                *it = obstacles[i];
                ret[i] = it - arr.begin() + 1;
            }
        }
        return ret;
    }
};