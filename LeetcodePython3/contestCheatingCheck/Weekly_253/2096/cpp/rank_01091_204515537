const int N = 1e5+10;
int dp[N];
class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obs) {
        memset(dp,0,sizeof dp);
        int cnt = 0;
        vector<int> res;
        int n = obs.size();
        for(int i = 0; i < n; i++)  {
            int l = 0, r = cnt;
            while(l < r)    {
                int mid = l + r + 1 >> 1;
                if(dp[mid] > obs[i])    r = mid-1;
                else l = mid;
            }
            //cout << l << endl;
            cnt = max(cnt, l+1);
            if(dp[l+1] != 0)
                dp[l+1] = min(dp[l+1], obs[i]);
            else dp[l+1] = obs[i];
            res.push_back(l+1);
        }
        return res;
    }
};//[1,1,2,3,2,3,4,5,3,5]