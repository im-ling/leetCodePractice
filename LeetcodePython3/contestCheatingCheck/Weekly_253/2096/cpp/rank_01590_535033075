class Solution {
 public:
  vector<int> longestObstacleCourseAtEachPosition(vector<int>& A) {
    int n = A.size();
    vector<int> S;
    int m = 0;
    vector<int> res(n);
    auto chk = [&](int x) {
      if (m && S[m - 1] <= x) return m;
      int l = 0, r = m - 1;
      while (l < r) {
        int m = (l + r) >> 1;
        if (S[m] > x) {
          r = m;
        } else {
          l = m + 1;
        }
      }
      return l;
    };
    int j = 0;
    for (int x : A) {
      int i = chk(x);
      if (i == m) {
        ++m;
        S.push_back(x);
      } else {
        S[i] = x;
      }
      res[j++] = i + 1;
    }
    return res;
  }
};