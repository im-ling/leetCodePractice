class Solution {
public:
    
    
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        //vector<int> &s = obstacles;
        int n = obstacles.size();
        int s[n+1];
        int pre[n+1];
        int maxIdx = 0;
        memset(s, 0x3f, sizeof s);
        memset(pre,0,sizeof pre);
        int t = 0;
        for(int i=0;i<n;i++){
            int x = obstacles[i];
            int l = 0, r = t;
            while(l < r){
                int mid = (l + r)/2;
                if(x >= s[mid]){
                    l = mid + 1;
                }else{
                    r = mid;
                }
            }
            //cout <<'#' << r << endl;
            s[r] = x;
            pre[i] = r + 1;
            if(r == t) {
                t++;
                maxIdx = i;
            }
        }
        vector<int> ans(pre,pre + n);
        return ans;
        
    }
};