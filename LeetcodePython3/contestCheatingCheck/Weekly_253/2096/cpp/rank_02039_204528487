const int N = 1e7 + 7;
int h[N];
class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        const int n = obstacles.size();
        memset(h, 0, sizeof h);
        int idx = 0;
        vector<int> ans;
        for (int i = 0; i < n; ++i) {
            int x = obstacles[i];
            int l = 0, r = idx;
            while (l < r) {
                int mid = l + r + 1 >> 1;
                if (h[mid] <= x) l = mid;
                else r = mid - 1;
            }
            idx = max(idx, r + 1);
            h[r + 1] = x;
            ans.push_back(r + 1);
        }
        return ans;
    }
};