class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        vector<int> d;
        int n = obstacles.size();
        vector<int> res(n);
        for (int i = 0; i < n; i++) {
            int l = 0, r = d.size();
            while (l < r) {
                int m = l + r >> 1;
                if (d[m] <= obstacles[i]) {
                    l = m + 1;
                } else {
                    r = m;
                }
            }
            res[i] = l + 1;
            l = 0, r = d.size();
            while (l < r) {
                int m = l + r >> 1;
                if (d[m] <= obstacles[i]) {
                    l = m + 1;
                } else {
                    r = m;
                }
            }
            if (l == d.size() || d[d.size() - 1] == obstacles[i]) {
                d.push_back(obstacles[i]);
            } else {
                d[l] = obstacles[i];
            }
            
        }
        return res;
    }
};
/*
提交结果：解答错误 
输入：
[5,1,5,5,1,3,4,5,1,4]
输出：
[1,1,2,3,2,2,3,4,2,4]
预期：
[1,1,2,3,2,3,4,5,3,5]
*/