class Solution {
public:
    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {
        int n = obstacles.size();
        vector<int> dp;
        vector<int> ans;
        // cout<<dp.size()<<endl;
        for (int i = 0; i<n; i++){
            int idx = upper_bound(dp.begin(), dp.end(), obstacles[i]) - dp.begin();
            if (idx == dp.size()){
                dp.push_back(obstacles[i]);
                ans.push_back(dp.size());
            }else{
                dp[idx] = obstacles[i];
                ans.push_back(idx+1);
            }
        }
        return ans;
    }
};