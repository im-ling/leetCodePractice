class Solution:
    def longestObstacleCourseAtEachPosition(self, obstacles: List[int]) -> List[int]:
        def bs(left,right,i):
            while(left < right):
                mid = (left + right)//2
                if tails[mid] <= obstacles[i]:
                    left = mid + 1
                else:
                    right = mid
            return left
        tails = [0] * (len(obstacles))
        dp = [0] * (len(obstacles))
        k = 0
        for j in range(0,len(obstacles)):
            m = bs(0,k,j)
            tails[m] = obstacles[j]
            k = max(m+1,k)
            dp[j] = m + 1
        return dp
        