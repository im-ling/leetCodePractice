class Solution:
    def longestObstacleCourseAtEachPosition(self, obstacles: List[int]) -> List[int]:
        ans = []
        d = []
            
        for n in obstacles:
            if not d or n > d[-1]:
                d.append(n)
                ans.append(len(d))
            else:
                l, r = 0, len(d) - 1
                loc = r
                while l <= r:
                    mid = (l + r) // 2
                    if d[mid] > n:
                        loc = mid
                        r = mid - 1
                    else:
                        l = mid + 1
                if d[loc] == n:
                    d.insert(loc,n)
                    ans.append(loc + 2)
                else:
                    d[loc] = n
                    ans.append(loc + 1)
            # print(d)
            # if not ans:  
            #     ans.append(1)
            # else:
            #     a = obstacles[i]
            #     now = 1
            #     for j,value in enumerate(obstacles[:i]):
            #         if value <= a:
            #             now = max(now, ans[j] + 1)
            #     ans.append(now)
        return ans
        