class Solution:
    def longestObstacleCourseAtEachPosition(self, obstacles: List[int]) -> List[int]:
        n = len(obstacles)
        # dp[i]表示以i结尾的最长路线的长度
        # dp[i] = dp[j]+1  j<i 并且ob[j]<=ob[i]
        def lengthOfLIS(nums):
            tails = [0] * len(nums)
            size = 0
            res = []
            for x in nums:
                i, j = 0, size
                while i != j:
                    m = (i + j) // 2
                    if tails[m] <= x:
                        i = m + 1
                    else:
                        j = m
                tails[i] = x
                size = max(i + 1, size)
                res.append(i+1)
            return res
        
        # dp = [1]*(n)  
        # for i in range(1, n):
        #     # dp[i] = dp[j]+1
        return lengthOfLIS(obstacles)