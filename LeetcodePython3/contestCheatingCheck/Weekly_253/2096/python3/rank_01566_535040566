class Solution:
    def longestObstacleCourseAtEachPosition(self, obstacles: List[int]) -> List[int]:
        ans = []
        ans.append(1)
        stack = []
        stack.append([obstacles[0]])
        
        for i,num in enumerate(obstacles):
            
            if i==0:
                continue
            elif num >= stack[-1][-1]:
                stack.append([num])
                ans.append(len(stack))
                # add a new col
            # binary search for the insertion place
            else:
                l = 0
                r = len(stack)-1
                while l<=r:
                    mid = (l+r)//2
                    val = stack[mid][-1]
                    if val <= num: 
                        l = mid + 1
                    else:
                        r = mid - 1
                stack[l].append(num)
                c = 0
                # for i in range(len(stack[l])-1, -1, -1):
                #     if num == stack[l][i]:
                #         c +=1
                #     else:
                #         break
                ans.append(l+1+c)
            #print(stack)
        return ans
    
                # # find equal in l
            
            #tack[l].append(num)