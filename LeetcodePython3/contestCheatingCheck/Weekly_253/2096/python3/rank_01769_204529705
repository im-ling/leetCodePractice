class Solution:
    def longestObstacleCourseAtEachPosition(self, obstacles: List[int]) -> List[int]:
        def bisect_(nums, x):
            l, r = 0, len(nums) - 1
            while l<r:
                mid = (l+r)//2
                if nums[mid] > x:
                    r = mid
                else:
                    l = mid + 1
            return r
        
        res = [1]
        longest = [obstacles[0]]
        le = 1
        for i in range(1, len(obstacles)):
            if obstacles[i] >= longest[-1]:
                longest.append(obstacles[i])
                le += 1
                res.append(le)
            else:
                loc = bisect_(longest, obstacles[i])
                longest[loc] = obstacles[i]
                res.append(loc+1)
        return res