class Solution:
    def longestObstacleCourseAtEachPosition(self, obstacles: List[int]) -> List[int]:
        def bisearch(l, r, target):
            l -= 1
            r += 1
            while l + 1 < r:
                mid = (l + r) >> 1
                if obstacles[mid] > target:
                    r = mid
                else:
                    l = mid
            return r
            
            
        n = len(obstacles)
        ans = [1]
        l = 1
        for i in range(1, n):
            index = bisearch(0, l-1, obstacles[i])
            if index == l:
                l += 1
            obstacles[index] = obstacles[i]
            ans.append(index+1)
            
        return ans