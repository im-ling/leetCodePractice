import bisect
class Solution:
    def longestObstacleCourseAtEachPosition(self, obstacles: List[int]) -> List[int]:
        
        res = [1] * len(obstacles)
        tails = [obstacles[0]]
        
        for i in range(1, len(obstacles)):
            obstacle = obstacles[i]
            
            if obstacle < tails[0]:
                tails[0] = obstacle
            elif obstacle >= tails[-1]:
                tails.append(obstacle)
                res[i] = len(tails)
            else:
                j = bisect.bisect_right(tails, obstacle)
                tails[j] = obstacle
                res[i] = j + 1
                
        return res