class Solution {
     public int[] longestObstacleCourseAtEachPosition(int[] o) {
        int len = o.length;
        ArrayList<Integer> al = new ArrayList<>();
        int[] res = new int[len];
        for(int i=0;i<len;i++){
            res[i] = bs(o[i], al);
        }
        return res;
    }
    public int bs(int num, ArrayList<Integer> al) {
        if(al.size()==0){
            al.add(num);
            //System.out.println(al);
            return 1;
        }
        else if(al.get(al.size()-1)<num){
            al.add(num);
            //System.out.println(al);
            return al.size();
        }
        else{
            int left = 0;
            int right = al.size()-1;
            int res = 0;
            while(left<=right){
                int mid = left+right;
                mid/=2;
                if(al.get(mid)>num){
                    right = mid-1;
                    res = mid;
                }
                else if(al.get(mid)==num){
                    res = mid+1;
                    left = mid+1;
                }
                else {
                    left = mid+1;
                }
            }
            if(res<al.size()) {
                al.remove(res);
            }
            al.add(res, num);
            //System.out.println(al);
            return res+1;
        }
    }
}