class Solution {
    public int[] longestObstacleCourseAtEachPosition(int[] obstacles) {
        var endings = new ArrayList<Integer>();
        endings.add(0);
        var ans = new int[obstacles.length];
        for (int i = 0; i < obstacles.length; i++) {
            int obs = obstacles[i];
            int before = binSearch(endings, obs);
            if (endings.size() - 1 == before)
                endings.add(obs);
            else
                endings.set(before + 1, obs);
            ans[i] = before + 1;
        }
        return ans;
    }
    
    private int binSearch(List<Integer> list, int target) {
        int from = 1, to = list.size(), found = 0;
        while (from < to) {
            int mid = (from + to) / 2;
            if (target < list.get(mid))
                to = mid;
            else {
                found = mid;
                from = mid + 1;
            }
        }
        return found;
    }
}