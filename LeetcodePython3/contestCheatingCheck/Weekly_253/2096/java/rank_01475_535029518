class Solution {
    public int[] longestObstacleCourseAtEachPosition(int[] obstacles) {
        int n = obstacles.length;
        int[] res = new int[n];
        int[] lis = new int[n+1];
        
        int maxL = 0;
        for (int i = 0; i < n; i++) {
            int insertPos = findInsertPos(lis, 1, maxL, obstacles[i]);
            lis[insertPos] = obstacles[i];
            maxL = Math.max(maxL, insertPos);
            res[i] = insertPos;
        }
        return res;
    }
    
    private int findInsertPos(int[] lis, int start, int end, int num) {
        int l = start, r = end;
        while (l <= r) {
            int m = (l+r) / 2;
            if (lis[m] <= num) l = m + 1;
            else r = m - 1;
        }
        return l;
    }
}