import java.util.*;

class Solution {
  public static void main(String[] args) {
    new Solution().longestObstacleCourseAtEachPosition(new int[]{5,1,5,5,1,3,4,5,1,4});
  }
  public int[] longestObstacleCourseAtEachPosition(int[] nums) {
    int n = nums.length;
    int[] memo = new int[n + 1];
    int[] ans = new int[n];
    Arrays.fill(memo, Integer.MAX_VALUE);
    memo[0] = 0; ans[0] = 1;
    memo[1] = nums[0];
    for(int i = 1; i < n; i ++) {
      int index = upperBound(memo, nums[i]);
      memo[index] = nums[i];
      ans[i] = index;
    }
    return ans;
  }
  private int upperBound(int[] nums, int target) {
    int left = 1;
    int right = nums.length;
    while(left < right) {
      int mid = left + (right - left)/2;
      if(nums[mid] <= target) {
        left = mid + 1;
      } else {
        right = mid;
      }
    }
    return right;
  }
}