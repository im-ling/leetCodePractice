class Solution {
    List<Integer> list = new ArrayList<>();
    public int[] longestObstacleCourseAtEachPosition(int[] s) {
        int n = s.length;
        int[] res = new int[n];
        res[0] = 1;
        
        list.add(s[0]);
        for(int i=1;i<n;i++) {
            res[i] = getLen(s[i]);
        }
        return res;
    }
    
    public int getLen(int x) {
        int l = 0, r = list.size() - 1;
        if(list.get(l) > x) {
            list.set(l, x);
            return l+1;
        }
        if(list.get(r) <= x) {
            list.add(x);
            return r + 2;
        }
        while(l<=r) {
            int mid = l + (r-l)/2;
            if(list.get(mid) <= x) {
                l = mid+1;
            } else {
                r = mid-1;
            }
        }

        list.set(l, x);
        return l+1;
        
    }
}