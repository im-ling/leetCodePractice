class Solution {
    public int[] longestObstacleCourseAtEachPosition(int[] obstacles) {
        int[] nums=obstacles;
        int len = 1, n = nums.length;
        int[] ans = new int[obstacles.length];
        int[] d = new int[n + 1];
        d[len] = nums[0];
        for (int i = 1; i < n; ++i) {
            if (nums[i] >= d[len]) {
                d[++len] = nums[i];
                ans[i]=len;
            } else {
                int l = 1, r = len, pos = 0; // 如果找不到说明所有的数都比 nums[i] 大，此时要更新 d[1]，所以这里将 pos 设为 0
                while (l <= r) {
                    int mid = (l + r) >> 1;
                    if (d[mid] <= nums[i]) {
                        pos = mid;
                        l = mid + 1;
                    } else {
                        r = mid - 1;
                    }
                }
                while(pos<obstacles.length-1&&d[pos+1]==nums[i]) pos++;
                d[pos + 1] = nums[i];
                ans[i]=pos+1;
            }
        }
        ans[0]=1;
        return ans;
    }
}
