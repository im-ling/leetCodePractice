class Solution {
    public int[] longestObstacleCourseAtEachPosition(int[] h) {
        Deque<Integer> stk = new LinkedList<>();
        int n = h.length;
        int[] ans= new int[n];
        int[] dp = new int[n+1];
        Arrays.fill(dp,Integer.MAX_VALUE);
        dp[0]=0;
        int idx=0;
        for(int i=0;i<n;i++){
            int k=find(dp,idx,h[i]);
            if(k==idx){
                idx++;
            }
            dp[k+1]=Math.min(dp[k+1],h[i]);
            ans[i]=k+1;
        }
        return ans;
        
    }
    int find(int[] dp,int idx,int t){
        int l=0,r=idx;
        while(l<r){
            int mid = l+r+1>>1;
            if(dp[mid]>t){
                r=mid-1;
            }else{
                l=mid;
            }
        }
        return l;
    }
}