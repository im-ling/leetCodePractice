class Solution {
    public int[] longestObstacleCourseAtEachPosition(int[] obstacles) {
        // monotonic tree map
        
        int[] ans = new int[obstacles.length];
        TreeMap<Integer, Integer> map = new TreeMap<>();
        
        for (int i = 0; i < obstacles.length; i++) {
            int ob = obstacles[i];
            
            Map.Entry<Integer, Integer> floorEntry = map.floorEntry(ob);
            
            int len = floorEntry == null ? 1 : floorEntry.getValue() + 1;
            
            map.put(ob, len);
            ans[i] = len;
            
            // remove unuseful higher entries
            Map.Entry<Integer, Integer> higherEntry = map.higherEntry(ob);
            while (higherEntry != null && higherEntry.getValue() <= len) {
                map.remove(higherEntry.getKey());
                higherEntry = map.higherEntry(ob);
            }
        }
        
        return ans;
    }
}