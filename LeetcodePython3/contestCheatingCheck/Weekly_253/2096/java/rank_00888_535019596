class Solution {
    
    int[] tree;
    public int[] longestObstacleCourseAtEachPosition(int[] obstacles) {
        tree = new int[10000001];
        int n = obstacles.length;
        int[] res = new int[n];
        
        ///res[0] = 1;
        //add(obstacles[0], 1);
        
        for (int i = 0; i < n; i++) {
            int len = query(obstacles[i]);
            res[i] = len + 1;
            add(obstacles[i], len + 1);
        }
        
        return res;
    }
    
    public void add(int id, int x) {
        
        for (int i = id; i < tree.length; i += i & (-i)) {
            tree[i] = Math.max(tree[i], x);
        }
        
    }
    
    public int query(int id) {
        int res = 0;
        for (int i = id; i > 0; i -= i & (-i)) {
            res = Math.max(tree[i], res);
        }
        return res;
    }
    
}