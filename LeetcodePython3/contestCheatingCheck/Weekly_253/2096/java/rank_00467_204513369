class Solution {
    public int[] longestObstacleCourseAtEachPosition(int[] o) {
        int n = o.length;
        int[] ans = new int[n];
        ans[0] = 1;
        int[] tail = new int[n];
        tail[0] = o[0];
        int t = 0;
        for(int i = 1; i < n; i++){
            if(tail[t] <= o[i]){
                tail[++t] = o[i];
                ans[i] = t + 1;
            }else{
                int mid = binary(tail, t + 1, o[i]);
                tail[mid] = o[i];
                ans[i] = mid + 1;
            }
        }
        return ans;
    }
    
    private int binary(int[] nums, int n, int t){
        int l = 0, r = n-1, mid = 0;
        while(l < r){
            mid = (l + r) / 2;
            if(nums[mid] <= t){
                l = mid + 1;
            }else{
                r = mid;
            }
        }
        return l;
    }
}