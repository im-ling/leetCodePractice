class Solution {
    public int[] longestObstacleCourseAtEachPosition(int[] obstacles) {
        int n=obstacles.length;
        int[] res=new int[n];
        int id=0;
        int[] tail=new int[n];
        int end=-1;
        for(int obs:obstacles){
            // if(obs<tail[0]){
            //     res[id++]=1;
            //     continue;
            // }
            if(tail[0]==0||tail[end]<=obs){
                tail[++end]=obs;
                res[id++]=end+1;
            }
            else{
                int index=binarySearch(tail,end,obs);
                tail[index]=obs;
                res[id++]=index+1;
                
            }
           
        }
        
        return res;
    }
    
    private int binarySearch(int[] tail,int end,int target){
        int l=0,r=end;
        while(l<r){
            int mid=l+(r-l)/2;
            if(tail[mid]>target){
                r=mid;
            }
            else{
                l=mid+1;
            }
        }
        return l;
    }
}