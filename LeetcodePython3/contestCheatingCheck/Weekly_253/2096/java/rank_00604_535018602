class Solution {
    public int[] longestObstacleCourseAtEachPosition(int[] nums) {
        int n = nums.length;
        int[] LIS = new int[n + 1];
        Arrays.fill(LIS, Integer.MAX_VALUE);
        LIS[0] = Integer.MIN_VALUE;
        
        int[] ans = new int[n];
        
        for (int i = 0; i < n; i++) {
            int index = findFirstGreater(LIS, nums[i]);
            LIS[index] = nums[i];
            ans[i] = index;
        }
        return ans;
        
    }
    
    private int findFirstGreater(int[] nums, int target) {
        int left = 0;
        int right = nums.length - 1;
        while (left + 1 < right) {
            int mid = left + (right - left) / 2;
            if (nums[mid] <= target) {
                left = mid;
            } else {
                right = mid;
            }
        }
        if (nums[left] > target) {
            return left;
        }
        return right;
    }
}