class Solution {
    public int[] longestObstacleCourseAtEachPosition(int[] obstacles) {
        int n = obstacles.length;
        int[] res = new int[n];
        int[] temp = new int[n];
        Arrays.fill(temp, Integer.MAX_VALUE);
        for (int i = 0; i < n; i++) {
            int index = binarySearch(obstacles[i], temp);
            res[i] = index;
        }
        return res;
    }
    
    public int binarySearch(int target, int[] temp) {
        int left = 0, right = temp.length - 1;
        while (left < right) {
            int mid = left + (right - left) / 2;
            if (temp[mid] > target) {
                right = mid;
            } else {
                left = mid + 1;
            }
        }
        temp[left] = target;
        return left + 1;
    }
}